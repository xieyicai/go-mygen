// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package main generated by go-bindata.// sources:
// assets/tpl/curd.tpl
// assets/tpl/curd2.tpl
// assets/tpl/entity.tpl
// assets/tpl/example.tpl
// assets/tpl/init.tpl
// assets/tpl/markdown.tpl
// assets/tpl/tables.tpl
// assets/tpl/test1.tpl
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsTplCurdTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x5a\x6d\x6f\xd4\x56\xf6\x7f\xed\x48\xf9\x0e\xa7\x16\xff\xc8\x0e\xd3\x3b\xe1\xaf\xd5\xbe\xc8\xd6\x8b\x92\xcc\x84\x8e\x36\x09\x6c\x66\xd8\x6a\x95\x46\xc8\x33\xbe\x03\x26\x1e\x7b\xb0\x3d\x21\xd1\x68\xa4\x94\xb2\xe2\x41\x10\x58\x4a\xa0\x4b\x59\x0a\x6c\xa8\xfa\x06\x48\x55\xb6\xa5\x61\xdb\x7e\x98\xcd\x38\xc9\xb7\x58\xdd\x27\x8f\x27\xe3\x71\x3c\x94\xdd\x46\x02\x8d\xaf\xef\x3d\xe7\xfc\xce\xd3\x3d\xf7\x5c\x37\x9b\xef\xc3\x11\xd3\x2b\xb9\x18\xc3\xb8\x06\x63\xd0\x6a\x0d\x0f\x91\x41\x57\xb7\xcf\x62\x38\x72\x3e\x03\x47\x5c\xe7\x22\x79\x87\xa6\x4d\x6c\x19\x1e\x99\x20\x91\x19\x66\x15\xf0\x05\xfa\x16\xcd\xe9\x35\x0c\xf2\x29\xdd\xc5\xb6\x5f\x30\x64\x32\x05\xf8\x5f\x94\x81\x06\xba\x61\x84\x4f\xc7\x40\xcc\x23\x73\xb0\xe5\xe1\x5e\x92\x45\xc7\xf5\xdf\x8e\x9c\x6d\x08\x24\xd8\x36\xe0\x7d\xf2\x30\x3c\x54\x71\x6c\xcf\x87\x92\x5e\xb6\x70\xb3\x89\x8a\xbe\xdb\xa8\xf8\xf4\x89\x70\x6b\xb5\x40\x03\xb9\xd9\x44\x91\x11\x99\xac\x12\x43\x53\x4e\xad\x86\x6d\x9f\x90\xf2\x57\xeb\x18\x62\x49\x78\x74\x04\x9a\x3d\x5a\x34\x7d\x5c\xeb\x55\x23\x1d\x46\x6c\xad\x44\x65\x67\x23\xa5\xd5\x3a\x19\x11\x8f\xd3\x8e\x5b\xd3\x7d\xb1\x52\x0a\xc7\xe7\x71\x4d\x77\x97\x22\x48\xc5\x4f\xb3\x0a\x84\x31\xd7\xcd\xff\x53\x6e\x53\xe7\x4c\xcb\x70\xb1\x4d\xd9\xf4\x8a\x3e\x63\x7a\xbe\x50\x33\x64\xb3\xd0\x7e\x7e\x7b\xef\xfa\xa5\xdd\x4b\x3f\x0c\x0f\x49\x45\x6c\xe1\x8a\x8f\x0d\x00\x28\x3b\x8e\x05\x49\x7f\xd9\x2c\x04\x9f\xbf\x6c\xdf\xfe\xaa\xbd\x79\x79\x67\x7b\x7d\x7f\xed\xda\xce\xeb\xe7\xbb\xd7\xbf\x0b\xd6\x3e\xe9\x12\xb3\x15\xab\x5b\x98\x6b\x58\x16\xe4\x6d\xdf\xf4\x57\x3b\x7a\x26\x83\xc9\xba\x4e\xf0\x57\xa2\x2d\xe1\x52\x91\xa7\x86\x65\x71\x2d\x4b\xc0\xc7\xa2\xea\xa4\x52\x52\x19\xab\x0d\xbb\x02\x0a\xa1\x3a\xda\x4f\x14\x15\x4a\x4e\x9c\x4e\x15\x95\xae\xe9\x15\xbd\x39\x3c\x24\xb9\xd8\x6f\xb8\x36\x8c\xc4\x4d\x68\xf2\x20\x1b\x28\x0c\x09\x1c\x90\xab\x96\xa3\xfb\xbf\xfd\x0d\x0d\x1b\xa9\x1b\xfb\xb8\x44\x7e\x77\x0d\xa1\x69\x36\x3d\x23\xf5\xe8\x40\x8a\x8b\xcb\x08\x8f\x81\x38\x0c\x46\xdf\xb4\x07\x40\x50\xb0\x07\x96\xdf\xb4\x53\x4b\x5f\xb0\x07\x94\xdd\x37\x6b\x18\x95\xcc\x1a\x8e\xe7\x50\x72\xc8\x3b\xa5\x87\x91\x3a\x18\x97\xd1\x77\xcc\x21\xa5\x36\x8a\xbe\x6b\xda\x67\xfb\x12\x62\x91\xdd\xf5\x5b\x44\x7a\xdf\x94\x39\xeb\x18\xd8\x8a\xc4\xb2\x94\x9b\x84\xd1\xb3\x8e\x5b\x43\xb9\x49\xbe\x76\x59\x77\xc1\xc0\x55\xbd\x61\xf9\x71\x14\xa4\xd8\x18\xa3\x74\xd9\xda\x5a\xc3\xc7\x2b\xf1\xe9\x7a\xd5\xae\xa0\x59\xf2\x3a\x8c\xf4\x13\x38\x96\x49\xbf\x50\xa6\x6c\x88\xd8\x06\xae\xe2\x04\x56\xe8\xb4\x6d\x39\x95\x25\x45\x1d\x1e\x92\xfa\x4f\x9a\x11\x53\xcc\x6a\x12\x62\x4d\xb3\x4d\x8b\x2a\x4b\x22\xf8\xb0\x4b\xff\x39\x2e\x19\x48\x5e\x99\xa1\x93\x35\x98\xc3\x17\xe3\x51\xfe\x8e\x4c\x78\xaf\x43\x5f\xaa\xeb\xb6\x59\x51\xaa\x35\x1f\x15\xeb\xae\x69\xfb\x55\x45\x0e\xee\x3f\x0e\xbe\xdd\xd8\xfb\xf9\x51\xb0\xfe\x2c\xd8\xd8\x0a\x6e\xbe\x68\x6f\x7f\xf6\xef\xb5\x4b\xff\xb7\x2c\x53\xfa\x2a\x41\x20\x71\xeb\x8b\x3c\x97\x20\x14\x37\x33\x55\x7f\x3f\xc1\x8c\x32\x20\x84\x84\x63\xa8\xa0\xf4\xb7\x46\x86\x29\x43\xa5\x00\xcc\x2a\x58\xd8\x56\x8c\xb2\x0a\xbf\x87\x31\x86\x29\x29\xf3\x86\xf6\x94\xa4\xdc\xe4\x38\x18\xe5\x85\xb1\xc5\x0c\x85\x93\x01\xdb\xb4\x38\x26\xb3\x0a\x15\xc7\xb6\x99\x36\xc7\x35\xf2\x50\x45\x39\x86\x70\x8a\xfc\x3e\x81\xfd\x5c\x59\xa9\xea\x96\x87\x7b\x54\xca\xd9\xdb\x26\x93\x94\x90\x24\x21\x38\xa8\x68\x54\x80\x83\x92\x51\x45\x66\xb3\xb0\xb7\xfe\x7d\xfb\xd6\xbd\xe0\xda\x5a\xf0\xf0\xda\xee\x83\xcb\x7b\x4f\xbe\x6e\x3f\xbf\x1f\xbc\xf8\xa7\xd8\xce\x6a\x09\xde\xac\x92\x18\x98\x72\xac\x46\xcd\xf6\x14\x95\x84\xa6\x69\x9f\x8d\x6e\x59\x32\x09\xe4\x09\xcb\xa2\x5b\x11\xa9\x1b\x5a\x2d\x90\x0f\xf2\x6e\x6f\x3e\xd8\x7b\x72\x83\xb9\x07\x4a\xcd\x76\xde\xb9\xe8\x29\xde\x05\xab\xb4\xe2\x73\xc6\x19\xa8\xeb\xae\x5e\xf3\x88\xf9\x4d\xdb\xc7\x6e\x55\xaf\xe0\x66\x4b\xa5\x5b\xb2\x37\x8f\xbd\x86\xe5\xc3\xc2\x62\x2c\xdd\x4c\x27\x34\x98\x37\x5c\x68\x60\x77\x35\xb4\x1a\xf1\x24\x94\x9b\x54\x54\xf4\x47\x32\xce\xf9\x0a\x86\x08\x21\x1e\x89\x64\xfa\x7b\x1a\x1c\x30\x20\x77\x05\x16\xf7\x04\x9e\xc2\x78\xf0\x15\xe3\x1a\x65\x86\xa6\x2c\xc7\xc3\x31\x71\x45\x22\xea\x14\x0f\xa8\xfd\x2b\xd7\x83\xbb\x3f\x85\xa1\xc4\x22\xab\xbd\xf9\xcd\xde\xab\x67\x34\xac\x3e\x76\x3f\xb6\x79\x68\x85\x91\x45\xd3\x44\xd5\x71\x81\xb1\x99\xc3\x2b\xbe\x10\x80\x97\x0a\xfd\xaa\x95\x26\xcd\xf5\x2c\x0f\xb0\xc5\xc5\x8a\x6e\x2b\x6c\x03\x60\x15\x07\x5d\xc8\x2a\x8d\x82\x5d\x75\x5a\xad\x11\xb6\x17\xa0\x0f\x1b\xb5\x3a\xd7\x6d\x36\x4b\x38\x44\xaa\x62\xb2\x9c\xa6\x7d\x95\x6b\x81\x80\x7d\x4f\xa3\xea\xeb\xc5\x1c\x7c\xf9\x6c\xef\xe5\xd3\xfe\x20\xa5\x8a\x63\xfb\xa6\xdd\xc0\x02\xb1\x14\xb1\xb7\x06\x7a\xbd\x8e\x6d\x23\xe2\x03\x19\xa0\xbb\x63\x9f\x3a\x4c\xed\x4a\x46\x3d\xbe\x7a\x73\x23\xf4\xd5\x41\x5c\x95\x7a\x0c\x4e\xe7\xaa\x5c\xf2\x01\xfc\x34\xc6\x45\x23\x3c\x0f\xb8\x69\x1a\x9b\xc7\x99\xfc\x97\x59\x3c\x62\x70\xe6\xf5\x91\x9d\xa9\x83\x59\x4b\x34\x4d\x1f\xcb\x9c\x09\xbe\x78\x15\xdc\xdb\x1a\xc4\x28\x45\x7d\x19\x1f\x4c\x1e\xcb\xba\xd5\xc0\xbd\x06\xd1\xab\x55\x5c\xf1\xa7\x9c\x86\xed\x03\xad\x36\x7b\x4c\xe0\xf9\x35\x3f\x26\x53\x9c\x72\x71\x5d\x77\x05\x1b\x35\x31\x01\x10\x12\xff\xdd\xf8\x77\xb9\xeb\x73\x31\x29\xc3\xfc\x0a\xae\x28\x14\x76\x77\x06\xd3\x22\x19\x2c\x02\x5f\x54\x04\x8c\x14\x22\x09\x78\x82\xbe\xc5\x46\x5f\xdb\x04\xf7\xb6\xda\x4f\x1f\xed\xfc\xfc\x24\xf8\xe4\x65\x3a\xd3\x4c\xb9\x58\xf7\x31\x13\x2b\x7e\xa2\xca\x94\x4f\xe5\x63\x07\x75\x11\x5c\x1a\xc8\x85\xb9\x62\x7e\xbe\x04\x85\xb9\xd2\x49\x90\xe1\x68\xc2\x19\xfe\x28\xc8\xa0\x34\x9b\xa8\x60\x7b\xd8\xf5\x23\x3b\x94\x0a\x7f\x9a\x98\x39\x9d\x2f\x46\xde\xce\xd2\xe2\x55\x95\xd3\x59\x1b\x33\x73\xf7\xdd\x0f\xc4\x5e\xfe\x2b\xbb\xc4\x19\x61\xd0\x8e\x33\x74\x1d\x26\x39\x76\x16\xe4\x2c\x69\x8b\x53\x24\x3a\xe1\xb0\xd3\x05\x3d\x5c\x00\x7b\x2d\x85\x07\x1a\xee\x54\x5d\x39\x41\xcd\xf0\x33\x7f\xef\x56\xc0\x8f\x2e\x9c\x4a\xcc\xda\xc4\xa5\xb6\x01\x3d\x67\x89\xb4\xea\xef\x14\x58\x11\x97\x1d\x38\x9b\x9c\xae\x1b\x87\xba\x6c\x9a\x3c\xc2\xbd\x78\x5c\x03\xf9\xf4\xa9\xdc\x44\x29\x9f\xc2\x83\x8b\xf9\x12\x51\x0b\x13\x21\x5a\x66\x7d\xf4\x61\x7e\x3e\x4f\x5e\x9d\x72\xcd\x9a\xee\xae\xfe\x01\xaf\xd2\xc6\xd5\x71\xe2\xc4\x7c\xf7\x21\x1e\xac\x2f\x61\x65\x61\x31\x92\xf3\x32\x30\xa6\x46\xd2\xfd\x11\x33\x03\x47\x96\x75\x8b\xb6\x14\x18\x1b\xc2\x81\xb2\x6a\xb5\x38\xa1\x70\x97\x65\xcf\x19\x68\x36\xc9\x1a\x96\xef\x79\xea\xef\xa8\xbb\x86\xc2\xfc\xdb\xb3\x3d\x85\x56\xe0\x9b\xfe\x83\x01\xb7\xdb\x09\xcb\x52\xc8\x36\x8a\x3d\xda\xa6\x4a\x5b\xee\x45\x75\x5f\xcc\xcf\xe4\xa7\x4a\x44\xf5\x35\xd4\x55\xdf\x1e\x05\x79\x7a\xfe\xe4\x6c\xb2\x55\x58\xae\x25\xcc\x45\x78\x51\x2a\x61\xb9\xca\x93\xc3\xbb\x2a\x2f\xa6\x4d\xd7\xf3\x39\xe2\xf4\x55\xc3\xbb\x83\x4b\x9d\x70\xa6\x30\x5b\x28\xc1\x31\xf9\xc0\x3e\xd3\x81\x9e\x2a\x2d\x26\x16\x5e\xc1\xc3\xb5\xf6\xed\xf5\x9d\xd7\x6b\x03\xea\x67\x46\xff\xf5\xd5\x73\x72\x3e\x97\x9f\x87\xc9\x3f\x43\x21\x07\xb9\x7c\x71\xea\x7f\xa1\x2f\xa6\xa6\x94\x5b\x2e\x49\x4a\x44\x49\x95\x94\xd9\x89\xe9\x04\xa6\x4e\x9e\x9e\x2b\x29\xa3\x2a\xa4\x8a\x8a\x14\x95\xaa\x1a\x57\x7a\x8e\x50\xa9\xde\x46\x13\xed\xab\x9b\xc1\xbd\xe7\xbc\xc7\xfc\xfc\xf3\xf6\xc3\xaf\xd3\xe9\x23\xbf\x62\x7a\xbe\xa7\x98\x46\x24\x7d\xb2\x0e\xb0\x0a\x4a\x99\x36\xb6\xdf\xb1\x7a\xa8\x9b\x5c\x3c\x87\x5d\x0c\xa6\x21\x92\x74\xaa\xd2\xde\x34\x88\x66\x96\x75\x17\x22\xc6\xfb\x65\x6a\xa4\x2d\x0b\x42\x2b\x6c\x83\x94\x41\x03\xdf\x65\x07\xac\x44\x8d\x07\x37\xae\x05\x37\xae\xb4\x5f\x3c\xd8\x7d\x70\x39\xf8\xfb\x93\x9d\x37\xdf\xf1\x3c\x7e\xf5\xfe\xde\x93\x94\xda\x9f\x36\x6d\x43\xe1\xba\x88\xee\x4a\xba\x7b\x36\xee\xbc\x34\x60\xa2\x17\x71\x96\x9b\x44\x1f\x11\x1e\x8c\x13\xa3\xae\xa2\x93\xae\x81\x5d\x45\x36\x0d\x30\xb0\x57\x91\x55\x44\x85\x19\xe1\x4c\x54\x94\xe7\xbd\xb3\x44\xdc\x14\x31\x43\xdf\xbe\xfa\x78\xff\x6f\x9b\x83\xe4\xab\x1c\xb6\xb0\x8f\xd3\xe3\x67\xc1\x1a\x01\x68\x94\xc7\xb5\x7e\xf0\x38\xf1\xd8\x7b\x84\x96\x1a\xe9\xc0\x95\xbb\xaa\xfb\x0c\x19\xe0\xd0\x3b\xb1\x45\x91\x51\xd0\x3b\xaf\xdf\xec\xdf\x7d\xd1\x5e\xfb\x17\x41\x3f\x30\xd6\xc9\xd5\x82\xa1\x98\x46\x1a\x6c\xb4\xbd\x5b\x8e\x34\x7d\x45\xd3\xce\x34\x3c\x55\xd3\xba\x9b\x76\x63\x61\xb3\x4b\x34\xc6\x3b\x33\x8f\xb1\x99\x46\x99\xa9\x8a\x8a\xa6\xf4\x8d\x4e\x95\xeb\x52\x36\x0d\xed\xb8\x4c\x62\xce\x5b\x18\x5b\x4c\xa1\xce\x4e\xb7\x6e\x70\x4e\x50\x98\x03\xe5\xb8\xca\xd8\xa5\xe1\x95\xde\x7c\xa4\x52\xce\x8e\xc2\xce\xeb\xed\xe0\xf1\x5f\x77\xdf\x7c\x16\x3c\xba\xbc\x7b\xf7\xcb\xe0\xea\xed\x9d\xd7\x6b\x3b\xdb\x5f\xb4\xaf\xfc\x18\x6c\x6c\xc1\x68\x96\xdd\x6f\xc5\x5d\x11\x76\xdf\x74\xc5\x94\xbb\x13\x86\x41\x6f\x11\x95\x0a\xf9\xbf\xdf\xac\x26\x6b\x47\xa0\xf0\xc2\x31\xda\xad\x09\x47\x33\x40\x89\xa8\xd1\xe6\xef\xe1\x4d\x17\x22\x2c\x0f\xa3\x3e\x99\xc1\x73\x5c\x9f\x27\xf3\xca\x39\x5c\x59\xc2\x06\x42\x88\xb7\x03\xfa\xb5\x8d\xbb\x3a\xc6\xc4\x1d\x45\xfe\xe9\x77\x51\x3a\x3c\x24\x51\xc3\x53\xfd\x83\xc6\x5d\xf2\x60\x80\x1e\x4c\x34\x1d\x5b\xf2\x11\x54\x72\x28\x20\x22\x73\x54\x5c\x35\x03\x1d\xf2\x87\x5d\xa0\x24\x25\x4a\x11\xd6\x2f\x1e\xed\xae\x6f\x11\x2e\xa8\x20\x62\x91\x1c\x27\x6f\xfd\x83\x54\xa7\x7f\xf9\x74\xf7\xd5\xe3\x60\x63\x6b\xff\xca\xad\xe0\xde\x0f\xc1\xb7\x1b\xc2\x1a\x56\x92\x0a\x54\x98\xc1\xb6\xa2\x92\x6c\x16\xed\x0d\x93\x68\xb4\x18\xd8\xd6\x21\xbc\x83\x97\x77\xf7\x7e\xfa\x94\xb3\x1f\x8c\xb1\xe7\x29\x66\x06\xce\x13\xe6\x2a\xbb\x92\x16\xbd\x7e\xd3\xf3\x17\xcc\x45\x54\x24\x5e\xa0\x69\xec\xf9\x3c\x7f\x8e\xe6\x11\x31\xb1\x60\xc0\x07\xe1\xac\x82\x01\x2c\xed\x17\x72\xed\x9b\x57\xda\xdb\xb7\xe2\x7a\xf3\x5d\x2c\x3e\xe8\xe2\x10\xf6\xe0\x13\x71\xef\x6c\x6f\x06\x37\x9f\xbe\x05\xee\xe2\x45\xbd\x1e\xc1\x4d\x84\xe2\xc2\x64\x84\x18\x10\x42\xce\x08\x41\xb9\x40\xc1\xf7\xdf\xb4\xb7\xbf\x0a\xd6\xef\x50\x58\xa9\xf8\xe5\x30\xae\x13\x58\x8a\x4a\x6b\x21\x02\x85\x3e\x72\xfb\xd2\xee\xf3\x19\xda\x77\x25\xf5\x0c\x3b\x58\x32\x92\xbc\xe5\x11\x8d\xf7\x68\xa3\x23\x3a\x8e\x3a\x5c\x24\x29\x9b\xdd\x5f\xbb\xd3\xfe\xf1\x4e\xe4\xfe\xa8\x95\x52\xd8\x92\x33\xab\xd7\x15\x15\x6a\x7a\x7d\x81\x45\x7b\x7c\x48\x50\x11\x6a\x7a\xfd\x58\x78\x4e\x3e\x6c\x85\x80\x6a\xda\x06\x5e\xe9\x0b\x97\x90\x5c\x20\xc0\x0a\x46\x68\x05\xba\x62\xb1\x3b\x8d\x93\x79\x5d\x39\xef\x50\x5c\x61\x8a\xe8\x9f\xd6\x12\xbe\x32\x70\x1c\x7f\x5c\x8b\xff\xc8\xa0\xc5\xb3\x5d\x9d\x7e\xb9\x13\x4f\x84\x4f\xc1\xb4\x78\xa6\x02\x88\xc2\x94\x33\x8f\x68\xd3\x62\x29\x8d\xda\x81\xeb\x6c\x29\x03\xcb\x1d\x6d\xd1\x89\x54\x5b\xdc\x75\x2a\x20\x5e\x71\x50\xdc\x41\x48\xb1\xaa\x69\x4b\xfc\x49\x5a\x46\xe2\x0b\x14\x4d\x14\xac\x92\x54\x76\xb1\xbe\x44\x7f\xb6\xc2\x2b\x02\xb3\x0a\xcb\x48\x7c\x88\xa4\x69\xb2\x1c\x3a\x9c\xe3\xa3\x70\xf7\xa2\xa6\x5a\x5a\x64\x8d\xb3\x30\xbc\x25\xa6\x86\x8c\xc0\xaa\x51\x71\x17\x3a\xf4\x16\x85\x68\x7c\x02\x17\x8e\x2d\x8b\xa7\x1e\x25\x9f\x20\x44\x07\x01\xaf\xd4\xa9\xb5\x47\x46\x80\x2e\x89\x89\xa0\xae\xf1\x48\x04\x75\xbb\x1a\x99\x45\x5d\xad\xd9\x0c\x1b\x6a\xff\x09\x00\x00\xff\xff\x3e\xc9\xf5\xd2\xf2\x25\x00\x00")

func assetsTplCurdTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplCurdTpl,
		"assets/tpl/curd.tpl",
	)
}

func assetsTplCurdTpl() (*asset, error) {
	bytes, err := assetsTplCurdTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/curd.tpl", size: 9714, mode: os.FileMode(438), modTime: time.Unix(1592364595, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplCurd2Tpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x5d\x6b\xdb\x56\x18\xbe\x96\x40\xff\xe1\xad\x28\x41\x6a\x8d\x9c\xc1\xd8\x45\x86\x3a\x62\x5b\x59\xcd\x12\xa7\xb3\x9d\x8d\x51\xca\x90\xad\xe3\x4c\x54\x1f\xce\xd1\x51\x9c\x20\x0e\x74\xb0\x8b\x15\xd6\xae\x37\xcd\x4a\x57\x36\x5a\xba\x51\x06\x6d\x72\xb1\xb1\xde\xed\xcf\xc4\x5a\x7e\xc6\x38\x47\xb2\x2d\x7f\xc5\x72\xc8\xa0\x63\x81\x10\x72\xa4\xf3\xbc\xe7\x7d\xde\xe7\xfd\x38\x22\x87\x5d\x04\x51\xa4\x35\x08\x0e\xdb\xa4\x69\xb6\x1c\x54\x33\x5d\x44\xe9\x96\x6f\x21\x07\x02\xbe\x0c\x91\x24\x56\x4a\x70\x2d\xd8\x73\xb4\x4a\x49\x12\xa9\x24\x4a\x62\x27\xf4\xda\x50\x43\xbd\x59\x9b\x15\xab\x05\x9a\xa6\xa5\x1b\x54\xb8\x36\xdf\x42\x24\x89\x76\x07\x1c\xe4\x29\x56\x4b\x85\x1b\xb0\xca\x56\x00\x00\x30\x22\x21\xf6\x60\x65\xee\xd6\xf4\x3d\xf6\x53\x29\xad\x81\xd5\xba\xbd\x7a\xa7\x90\xac\x51\x7e\xc6\xbc\x08\x6c\xb7\x6b\x06\x04\xe1\x4a\xa9\xc0\x77\x72\x07\x8b\x45\x38\x7b\xf8\x67\xff\xfb\xa3\xf8\xfe\xbd\xf8\xd9\xfd\xbf\x9f\x7e\x73\xf6\xfc\x55\xff\xf5\x0f\xf1\x9b\x3f\x52\xef\x15\xf7\x1c\xcf\x54\xd8\x45\xa4\xec\x3b\xa1\xeb\x05\x8a\xca\x98\xb4\xbd\x5d\xe6\x9c\x90\x9e\x4b\x66\xbc\xaf\x3b\xce\x86\x8d\x1c\x6b\xd3\x0e\x08\xa5\x20\x4f\xda\xee\xbf\x7c\x7a\xf6\xfc\xbb\xf8\xf1\x49\xfc\xe0\x8d\x96\xdb\x6c\xdd\xef\x05\x4a\xb0\xe7\x34\x0f\x48\x6a\xb8\x00\x5d\x13\x9b\x6e\xc0\xc2\x62\x7b\x04\xe1\x8e\xd9\x46\x11\x55\x41\xc1\x7e\x2f\xa8\xa3\x20\x74\x08\xdc\xbe\xc3\x70\x6f\xdd\xdd\x35\x3c\x62\x93\x43\x4a\x67\x59\x29\x00\xc2\x98\xfd\xfa\x58\x65\xee\xec\x85\x08\x1f\x26\x8b\x6b\x3a\xb8\x5a\xa5\xa4\x7d\xca\x96\x52\xfb\x03\xc3\x9a\xa6\xa9\x3c\xd4\xec\xc5\x2b\x3a\x78\x36\x8f\x7d\xc2\x05\xf7\xda\x42\x1d\x84\x81\xc3\x69\x65\xc7\x0f\x90\xa2\x4a\x62\xc7\x1f\x2c\xd5\xd0\x01\x51\xb8\x45\xec\xf7\x98\xa9\xa9\xa3\xd6\x42\xc7\x99\x3a\x6e\x44\x25\x91\x99\xd4\x53\x98\x46\xdb\xf4\x14\x49\x8c\x22\x6c\x7a\xbb\x08\xf8\x26\x1e\x81\xa0\xea\x75\x7c\x4a\x57\xb0\xdf\xd3\xa2\x48\xbb\x19\xba\xdd\xd4\xe1\x62\x91\xd9\x2a\xfb\xae\x8b\x3c\x42\x29\xdb\x8c\x3c\x8b\xd2\xc4\x1f\xe6\xc8\x15\x9d\xbb\x15\x49\x62\xdb\xf7\x88\xed\x85\x28\x11\xe0\x88\x5a\x1d\xcc\x6e\x17\x79\x56\x86\xee\x02\x57\xe6\x02\xb6\xa3\x73\x8e\x1a\x45\x8c\xce\x3d\xd0\x3e\xf6\x9b\x2c\x8d\xe5\x8e\xe3\x9b\xe4\x83\xf7\x65\x0e\x35\x72\x60\x6d\xca\x25\x6d\x23\x79\xb3\x50\x2c\x4e\x79\xe6\x04\x08\x26\x70\x6d\x2f\x1f\x6a\xd5\xcb\x8f\x49\x6c\x17\x69\x4d\xdb\x45\x39\x70\xd9\x6b\x73\x60\x17\x6f\x6e\x24\xfa\x9f\x17\xc4\xf4\x0f\x0b\x26\x1d\x93\x63\x36\x09\x1f\x3c\x1e\x26\xe1\x32\x39\xc8\x53\x00\xe5\xcb\xc1\x54\x27\x17\x4d\xc0\xf1\xdc\xcb\xd8\x1e\xcf\xbf\x77\x2b\x75\xd2\x52\xc0\xba\x84\x81\x71\xcd\x67\x65\x6b\xa2\x28\x8c\x98\xd1\xdf\x81\x74\x81\xff\x53\xbe\x9c\x9b\x2e\x2c\x3f\x26\x93\xe5\xcb\xf8\xc7\xdf\xe3\xa3\x93\x65\xf2\xa4\x61\xee\xa3\xc9\x46\xb5\x6f\x3a\x21\x9a\xce\x91\x16\xb4\x7c\xdf\x99\x14\x7f\x40\x5c\x32\xde\x7c\x6e\x61\xd4\x35\xf1\x00\x35\x57\xcf\x61\x20\xa3\x96\x83\xd3\xea\x9c\x82\xf2\x87\xc6\x01\x6a\x2b\xfc\x60\x8b\xfb\xd8\xbe\x89\xc1\xec\x74\x50\x9b\x94\xfd\xd0\x23\xc0\xd5\x20\x89\x99\xa5\x04\x5b\x87\xc4\x92\xc6\x64\xbf\xce\x9f\x22\x4b\x59\x00\xde\x62\x9d\x24\x03\x7e\x03\x56\xa7\x03\x11\x1f\x9d\xf4\x5f\xfc\x74\xfa\xd7\xf3\xf8\xeb\xe3\x7c\x71\x28\x63\x64\x12\x94\x78\x98\xa7\x06\xa9\xa0\x38\x66\x40\xaa\x56\xe2\xdd\x64\x54\xda\xbe\x17\x10\x18\x54\x3f\x1d\xe4\x6a\xad\x61\xd4\x9b\x50\xad\x35\xb7\x41\x86\xeb\x69\x01\xe2\x80\xdc\xc0\x4e\xb7\x8b\x70\x06\x1f\xae\x83\x0c\x4a\x14\x69\x55\x2f\x40\x98\x64\x46\x24\x15\x3e\x5b\xdf\xdc\x31\x1a\x99\xa7\x5b\x26\xbe\x4b\xa9\x2a\x2f\x52\x03\xba\x5c\x39\x64\x4a\x4d\x72\x8e\xa4\xcc\x24\x2a\xb9\x40\x19\x9c\x3e\x4e\x42\xf1\x84\x5a\x36\xd9\x62\x62\x6f\xa1\x5a\xa6\x84\xb1\x74\x82\xee\x74\xad\x65\x85\x31\x3b\x51\x87\x6a\x58\xd3\x41\xde\xb9\x55\x59\x6f\x1a\xf9\x95\xd0\x30\x9a\xc0\x9f\xb1\xc3\x64\xe7\xe5\xcf\x6f\x1a\x75\x83\x63\x60\xdb\x35\xf1\xe1\x27\xe8\x90\x52\xd0\xe1\x23\x59\x12\xd3\x66\xcb\x94\x60\xde\x45\xca\xed\x3b\x99\x7a\x52\x80\x55\x75\x14\xbf\xab\x76\x01\xae\xee\x9b\x0e\x7b\x37\x35\xc2\xf0\xb9\x21\x4a\x53\x9c\xe1\x04\x97\xfc\x5f\x80\x28\x62\x7b\x78\x10\xd3\x70\x0e\xaf\x1c\xae\x36\x2c\x6c\x53\x2d\x78\x18\x8b\x9f\x7f\x39\x3b\x7e\x91\x9d\xef\xf3\x45\x64\xc3\xf6\xac\xa5\xe2\x81\x51\xc0\xbc\xb9\xd8\x74\x3f\x16\xb6\x86\xb1\x69\x94\x9b\x2c\x6a\xae\x36\x76\xb9\xb9\x0e\xf2\x46\x7d\x7b\x2b\x57\x40\x79\x46\xb1\x03\x0d\x74\xcd\xb1\x86\x37\x96\x24\x49\x2f\x6b\x0e\xdb\xb0\x71\x40\x96\x65\xeb\x82\x73\xd8\xe5\x53\xc5\xb5\xbf\x59\xdd\xaa\x36\xe1\x3d\x79\xbc\x12\x8d\x68\xcb\x59\xda\x66\x33\x1a\x3f\xbb\xd7\x7f\xf4\xf0\xf4\xed\xbd\x25\x79\x65\x45\xe8\xbf\x4d\xeb\x76\xbd\x62\xd4\xa1\xf4\x05\x54\x2b\x50\x31\x1a\xe5\x7f\x97\xe7\xfe\x83\xc7\xa7\x6f\x7f\x5b\x86\xe1\x6d\x0f\x29\x61\x80\xf0\xa0\xc5\x8e\x38\x9c\xd9\x71\x85\x69\x96\xc0\xb6\x60\x39\x4e\x7a\x5f\x21\x8c\xc0\xb6\x74\x56\x3e\x05\x76\x53\x3d\xe7\x5a\x91\x1c\x4e\x95\x44\x21\xa5\x43\x07\xb6\x23\xb9\x25\xac\x24\x67\x55\x3f\x9c\x20\x4a\x10\x06\xfc\x08\x74\xf8\x25\x64\x92\xac\x44\x8b\x39\x07\x17\x36\x05\x29\x2a\x28\xed\xd1\xac\x95\x43\x41\x50\xde\xde\xa9\x35\x95\x6b\x6a\x7e\x86\x16\x5d\xb4\xd4\x19\x97\xa5\x15\x7e\xaa\x25\x15\xd3\xff\xf6\x65\x7c\xf4\x3a\x7e\x72\xdc\x7f\xf4\x6b\xff\xf5\x93\xfe\xb3\x57\xf9\xa8\x30\x0e\xec\x80\x04\x8a\x3d\x12\xcc\xec\x4e\x3c\x4b\x2a\xcb\xd3\x31\x26\x98\xb4\xe3\x0a\x8b\xae\xa2\x36\xd7\x0b\x1b\x90\xdb\xd9\xd1\x58\x98\x4f\x9c\x30\xc5\xdc\x84\x84\xec\x4e\x8a\x95\x7e\x3a\x14\x04\x36\x22\x13\x1c\xa2\xf9\x6a\xfb\x27\x00\x00\xff\xff\x47\xe1\xde\x73\xf5\x14\x00\x00")

func assetsTplCurd2TplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplCurd2Tpl,
		"assets/tpl/curd2.tpl",
	)
}

func assetsTplCurd2Tpl() (*asset, error) {
	bytes, err := assetsTplCurd2TplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/curd2.tpl", size: 5365, mode: os.FileMode(438), modTime: time.Unix(1592035233, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplEntityTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x41\x0a\xc2\x40\x0c\x45\xf7\x85\xde\x21\x8b\x2e\xa5\x07\x10\x5c\x09\x5d\x76\x21\xbd\xc0\x68\x83\x54\x67\x3a\x25\x4d\x29\x25\xe4\xee\x12\x75\xa4\x54\xc1\x59\x4d\x5e\xfe\x0f\x2f\xcf\x44\xca\xc6\x9d\x3d\x1e\x63\x08\xd8\xb3\x6a\x9e\xf1\x32\x20\x24\xae\x0a\x23\xd3\x74\x61\x10\x0b\x93\xeb\xaf\x08\xc5\x6d\x07\x45\xc7\x18\x60\x7f\x80\xb2\xea\xd0\xb7\xa3\xaa\xc8\x93\x95\xb5\x0b\x56\x7b\xbd\x04\x9b\x65\x78\xc3\x44\xaa\x48\xc1\x71\x2a\xc3\x26\x7f\xc2\xe0\xe8\x6e\x3a\x22\xd8\xb7\xf6\xd1\x2f\xdb\x7a\xf2\x7e\x6d\x6c\xf3\x1f\x6b\x8a\xf3\x56\x9a\xe2\xbc\x72\x4e\xc0\x4e\x7d\x9c\x61\xb5\xf9\x65\xf6\x08\x00\x00\xff\xff\x6e\x2e\x32\xff\x48\x01\x00\x00")

func assetsTplEntityTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplEntityTpl,
		"assets/tpl/entity.tpl",
	)
}

func assetsTplEntityTpl() (*asset, error) {
	bytes, err := assetsTplEntityTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/entity.tpl", size: 328, mode: os.FileMode(438), modTime: time.Unix(1591693953, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplExampleTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\x6d\x6b\xdc\x46\x10\xfe\x2e\xd0\x7f\xd8\x0a\xee\x22\x99\x8b\xe4\xd4\x49\x09\x82\xa3\xed\xbd\x84\x06\x92\xd4\xc5\x2e\xfd\x50\x4a\xd8\x93\xf6\xee\x16\x4b\xbb\xba\xdd\x55\x1a\xd7\x18\x2e\x50\x9a\x84\x24\x76\x20\x4d\x02\xad\xd3\x77\xf7\x85\x42\xed\x0f\xa5\x31\x97\x94\xfe\x19\x4b\x67\xff\x8b\x32\x92\xee\xcd\x75\x8a\x69\x09\xe4\xdb\xec\xec\xcc\xce\xcc\xf3\x3c\xb3\x11\xf6\x56\x70\x87\xa0\x70\x55\xf6\x02\x5d\xd3\x35\x1a\x46\x5c\x28\x64\xea\x9a\xe1\x63\x85\x5b\x58\x12\x47\xf6\x02\x43\xd7\x8c\x76\xa8\x0c\x5d\xbb\x8a\x8c\x0e\x55\xdd\xb8\x65\x7b\x3c\x74\x3a\xfc\xb4\xec\x05\xa7\x7d\x41\xaf\x11\xe1\x64\xaf\x40\xa8\x22\x52\x51\xd6\x01\x53\x2a\x41\x59\x47\x82\xc9\x88\x72\x62\x01\x01\x16\x94\x52\xab\x11\x41\x8d\x5a\x9d\xb3\x36\xed\x34\x99\xa2\x6a\x15\x49\x25\x62\x4f\xa1\x35\x5d\x7b\x87\x4b\x85\x10\x42\x79\x3e\x72\x9c\x64\x6b\x37\x79\xd2\xd7\xb5\x45\xe8\x0f\x21\x44\x99\x42\x8e\x33\xfc\x75\x27\xd9\xfc\x5e\xd7\xae\xe0\x90\xcc\x84\x0f\x3f\xff\x39\xbd\xf5\x54\xd7\x16\xb1\x94\xb3\xef\xec\x7c\x36\xfc\xe6\x86\xae\x35\x6a\x79\xce\xe4\x62\xf0\x20\xb9\x7f\x4f\xd7\xea\x5d\x2c\x24\x51\x53\x4f\x3d\x7f\x94\x65\x2c\xd3\x90\x7c\xc2\x19\x99\xdc\xa4\x8f\xff\x48\xee\x0e\x74\xed\x32\xbe\x7e\xd1\x0f\x48\xd1\x53\xba\xd5\x4f\x7e\xf8\x69\xf8\xcb\xe0\xf0\xf1\xef\x07\x7f\x7d\x95\x6e\x6c\x67\x11\xef\x46\x84\xcd\x44\xe4\x77\xe9\xc3\x5d\x5d\x5b\x07\x40\x1c\x07\x8d\x5d\xe9\xbd\xdf\x92\xc1\x03\x5d\x6b\xc7\xcc\x43\x17\x19\x55\x8d\x9a\xe9\xb5\x3b\x47\xf0\xb2\xd0\x9c\xec\x05\x76\xa3\x06\x88\xd1\x76\xd1\x98\xb4\x9b\xbd\x18\x07\x17\x78\xe0\x43\x8e\x3d\xea\xbb\x82\x0c\xc3\x82\xc8\x69\x27\xaa\x22\xe3\xd4\xdb\x92\x62\x67\xa9\x8b\x59\xa7\x8b\xe9\x29\x23\xeb\xc7\x97\x0c\xb9\x55\xd4\x0e\x95\xbd\x14\x09\xca\x54\xdb\x34\x4a\xd2\x2d\xc9\xb7\x94\x17\x99\x60\xf9\x96\x53\x92\x6f\x7a\x39\x5c\xd5\x92\x2c\x47\x60\xc1\xc3\x55\x25\x62\x52\x0e\xb8\x57\xbd\xc4\x3d\x1c\x94\x15\x0d\xc9\x55\xa8\x56\x2d\x49\xa3\x92\x37\x00\xe8\x17\x26\x70\x54\x98\x40\xfb\xc8\xcb\xc5\xc8\xcc\xb9\x2a\x0e\x05\x3f\x15\x5d\x8b\x45\x60\xbf\x17\x13\xb1\xda\x94\x1e\x8e\xc8\xcc\xb0\x56\x25\x93\x99\xc7\x19\x23\x9e\xa2\x9c\x55\x10\x11\x02\x26\x02\xc4\x80\x0b\xd3\xc8\xf5\x5a\x41\xbe\x64\x56\x86\x1f\x44\xbc\x56\x45\x8c\x06\x00\x53\x84\x19\xf5\x4c\x22\x84\x95\x01\x32\x79\xca\x5e\x22\xaa\x20\xb4\xce\x19\x93\x59\xe1\xc2\x61\x1d\x13\x08\xda\x98\x09\x04\x87\xa5\x6b\x82\xa8\x58\x30\x34\x89\xcf\xea\x5c\xc3\x02\x35\x6a\x23\x66\xf3\xf3\xda\x5a\x86\xd7\xfa\x7a\xa3\x85\xe6\xc6\x87\xcb\xdc\x27\xd9\xd6\x66\x2a\xa1\x8c\xaa\xfa\xf8\x29\x73\xc4\x34\x8c\x3c\xab\x9a\x62\xbb\x5c\x23\x00\x72\xba\x5c\x2a\xe0\x04\xe0\x76\x17\x16\xe6\xcf\x57\xf2\x6d\x72\x0d\xc1\x79\x7e\x83\xa5\x74\x8d\x33\xaf\x2f\x9c\x3d\xf7\x06\x9c\x73\x36\x5c\x63\x85\x32\x3f\x20\x3e\xb8\x0a\x4e\x5c\x23\x56\xed\xf3\x61\xeb\x2c\xf8\x0a\x40\xdc\x33\xf3\x95\xf1\x86\xb8\xe8\x5c\x25\x1b\xb2\x51\x43\xd5\x29\x5d\x5b\xba\x36\x3d\x62\x15\x5d\x21\x1f\x8f\x1d\x66\xa3\x66\x4d\x56\x24\xfd\x7a\xfb\x60\xe7\xbb\xf4\x76\x3f\xdd\xba\x3d\xfc\xe2\xd3\x7c\x57\x0a\x08\x96\x89\x54\xe3\xb4\x0b\x94\xf9\x1f\x74\x89\x20\xa6\x42\x73\xc5\x8f\x64\x2f\x67\xb0\x1c\x85\x4a\xd7\x5a\x9c\xaf\x00\x52\xe3\xec\x35\x28\xa6\xb8\xcf\xb3\xca\x82\xc8\x38\x50\x63\x09\x4d\xf5\x6a\x43\x19\xb3\x0c\xf9\x16\x7c\x22\x37\xff\x4c\x1f\xee\x1e\xde\xbc\x7b\xb8\xd5\x3f\xf8\xf1\x46\x7a\xe7\x79\xba\xb1\xbd\xbf\xd7\xdf\xdf\xbb\x93\xfd\xb0\xff\x10\x99\xb2\x9b\x42\x70\x31\x91\x19\x2c\xdc\x22\xec\x5b\xc0\xcc\xbc\xec\x87\xf3\x1f\xe5\x57\xf0\x41\x6c\x3c\x4d\x36\x1f\xc1\xff\x71\x7f\x63\x7f\xaf\x9f\x3e\xf9\xf6\xc5\x00\x5c\xc2\x52\x9d\x64\xf6\x7f\x1d\x4e\x48\x65\x32\x1a\x1c\xb7\x1f\x27\x68\xfd\x68\xdf\xfd\x67\x19\x3a\x9b\xc7\xb5\x5b\xe7\x31\x7b\x65\xfa\x4d\x6e\x7d\x99\x3c\x1b\xbc\x18\xdb\xba\x20\x58\x9d\x48\x59\xbe\xff\xdf\x74\x55\x54\x28\xfb\xfe\x4b\x9a\xa5\x79\x1d\x87\x51\x40\xde\x8f\xfc\x97\x3c\x49\x51\xe1\xff\x4d\xf2\x77\x00\x00\x00\xff\xff\x0f\x0d\x50\xf5\xaa\x08\x00\x00")

func assetsTplExampleTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplExampleTpl,
		"assets/tpl/example.tpl",
	)
}

func assetsTplExampleTpl() (*asset, error) {
	bytes, err := assetsTplExampleTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/example.tpl", size: 2218, mode: os.FileMode(438), modTime: time.Unix(1590049353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplInitTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\xdf\x6f\xeb\x34\x18\x7d\xb6\xff\x0a\x13\xa9\xbb\x09\xaa\x9a\xb5\xbb\xf7\x0a\x15\x45\x40\xdb\x8b\x40\x62\xfc\x50\x79\x47\x5e\xe2\xb4\x16\x89\x9d\xd9\xce\xc4\x98\x2a\x8d\x17\xc4\x03\x03\xa4\x01\x7b\x19\x08\x09\x10\x20\x24\xb6\x07\x04\x52\x85\xc4\x5f\xd3\x16\xfe\x0b\xf4\x39\x4e\x9b\x6c\xec\x29\xf6\xf9\x3e\x9f\x7c\xe7\xf8\x24\x3c\x2f\xa4\x32\xc4\xc7\xc8\x4b\xa8\xa1\x47\x54\xb3\x50\x1f\x67\x1e\x46\x5e\x9a\x1b\x78\x08\x66\xc2\x52\x59\x44\x1b\xc5\xc5\x4c\x7b\x38\xc0\xf8\x84\x2a\x38\x95\x53\x6d\x98\x9a\x8c\xc8\xf3\xfa\x38\xeb\x4d\x46\x18\xe9\x8c\x9e\xb0\x06\x10\x60\x9c\x96\x22\x26\x5c\x70\xe3\x07\xe4\x0c\xa3\x38\x9d\x91\x61\x44\x92\xa3\xb1\x14\x29\x9f\x9d\x61\x84\x5e\x93\xda\x0c\x09\x21\xc4\xcb\x64\x4c\xb3\xb9\xd4\xc6\xeb\x62\x84\xde\x96\xaa\xc2\x0f\x0e\xf6\x9f\x02\xf0\x26\xcd\x59\xd5\xa8\xa4\x74\x3d\x54\xeb\x0a\xea\x0f\x0e\x1e\x3f\x79\x6a\xc1\xc9\xc8\x75\x7a\xef\x73\x91\x64\x2c\xb1\xe8\x78\x4e\x95\x66\x66\x48\xbc\xd2\xa4\x2f\xe4\x47\x8f\x2d\x7a\x48\x3f\x78\xab\x60\x62\x48\xfa\xfb\xfb\x6e\xff\x7a\x92\xb1\x21\x79\x02\xdb\x45\x43\x64\x64\x55\x4c\x46\x7e\x9c\xce\x02\x8c\xc2\xb0\x16\xdb\x2e\x2c\x30\x36\xa7\x05\xdb\x2a\x24\xda\xa8\x32\x36\xa0\x1d\x84\xc2\xac\xa4\xf2\x92\x84\xe1\xea\xfa\x76\xf5\xcd\x39\xb6\x52\x6d\x85\x0b\xfb\x0c\xc3\xcd\xaf\x37\xab\xcf\xbf\xc7\x56\x73\xfb\xcc\xe6\xcb\x9f\xd7\x9f\xfc\x89\xad\xf4\x3b\x6c\x37\x1f\x6f\xbe\xfb\x08\x3b\xfd\xad\xca\xf2\x72\xf5\xc5\x05\xae\x3d\x68\xb2\xfd\xf5\xb5\x3d\xf3\x2e\xcf\xd9\x87\x52\xb0\x5d\x65\x7d\xf5\xc7\xea\xd3\x25\xae\x1d\x69\xcc\xb6\xbe\x3e\x5f\xfd\xf0\xd3\xe6\x97\xe5\xbf\x57\xbf\xff\xf3\xf7\xb7\xeb\xcf\x7e\xc4\xb5\x8f\xf7\xba\xaa\xfa\xfa\xab\x5b\x30\x26\x0c\xc9\x76\xbf\xbe\xf8\x6d\xb5\xbc\xdc\xc5\xa3\xf2\x6f\x6b\x5b\x50\x67\x08\x8c\xe3\xa9\x1b\x4b\xf7\x9e\x1d\x97\x34\x7b\x55\x66\x09\x74\xf7\xea\xa9\xbb\xc4\xf3\x6c\xbc\x50\x13\x25\x11\xf1\x1e\xbd\xa2\x39\x0d\xa7\x73\x2a\x66\x73\xca\x1f\x79\xf6\x4e\x13\x2d\x20\x84\x69\x6e\x7a\xd3\x42\x71\x61\x52\xdf\xeb\xe8\x61\x47\xbf\x6c\xe2\xc2\x87\x55\x12\x84\x1d\xfd\x52\x5c\xd9\x15\x75\xf4\x5e\x01\x2b\x20\x8e\x8c\x2a\xd9\x5e\x26\xe3\xe8\x0d\x48\xeb\x9e\xe1\x39\x7b\x0f\xde\x16\x75\xb4\x4d\x14\x4c\x00\xfe\xd7\x6b\xb8\xa7\x7a\x0d\x09\xd8\xe2\x52\x6d\xd7\xd5\x8d\xd5\x3b\x77\x4b\xb0\x2d\x55\xd6\x7b\xa7\x64\xea\xf4\x99\x8e\x69\xc1\x5a\xa2\x83\x2e\x46\x01\x46\x09\x4b\x99\x22\xe0\x63\xf5\x85\x81\x5b\x4c\x29\x10\xa8\x58\x2c\x4f\x98\xf2\x83\x17\x2d\xf2\x5c\x44\x04\xcf\x6c\x8f\x6b\xea\x43\xd7\xa1\x4b\xf8\x38\x93\x9a\xb9\xde\x7e\xab\x19\x15\x54\xf0\xd8\x07\x3c\x80\xfd\x62\xc7\x30\x00\x86\x69\xf5\x25\x34\x09\x06\x0f\x10\x0c\x76\x04\x5b\x0c\xa0\x05\x46\x0b\x3f\xc0\x28\x96\x42\xb0\xd8\x70\x29\xba\xb5\x0a\xc8\x01\x64\xcb\xf7\xf2\x53\xf8\x3d\x75\x49\xa2\x45\x80\x6b\x9d\x8d\xf7\x34\x19\x17\x4d\xae\xde\x94\x19\x97\xd0\xb1\x14\x42\x5b\x1f\x1d\x10\xfc\x4f\x23\x04\xbe\xd5\x08\x40\x80\x91\x62\xa6\x54\x82\xec\xfa\x21\xd5\x36\xc2\x77\x4c\x84\xc9\xa4\x72\xd9\xdd\xfe\x42\x1a\xa3\x3a\xa6\xba\xd4\x73\xe7\xec\xdc\xae\x26\x78\x86\x17\x15\x7b\xdb\xe0\x16\x79\xfd\x17\xba\xcf\xed\x2a\x0f\x52\xff\x17\x00\x00\xff\xff\xc2\xb5\x37\x26\xff\x05\x00\x00")

func assetsTplInitTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplInitTpl,
		"assets/tpl/init.tpl",
	)
}

func assetsTplInitTpl() (*asset, error) {
	bytes, err := assetsTplInitTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/init.tpl", size: 1535, mode: os.FileMode(438), modTime: time.Unix(1590049353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplMarkdownTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\xc1\x6a\xea\x40\x14\x86\xf7\x81\xbc\xc3\x81\xb8\x50\xb8\xc9\x03\x08\xf7\x6e\xae\x1b\xb9\x17\xeb\x42\xba\x11\x17\xb1\x9e\x16\x69\x92\x96\x68\xa0\x61\x66\xc0\x45\xa1\x85\xd2\xd6\x45\xc1\xac\x0a\x05\x11\xbb\xa8\x52\xda\x82\x98\x3e\x8e\x19\xf5\x2d\x4a\x66\x9c\xd4\x56\x9a\xc5\x84\xf9\xff\xc3\xf9\x4f\xbe\x13\xc3\x80\xd5\xc3\x98\xf7\x62\x3e\x3a\xd7\x35\x5d\xa3\xc9\xfc\x36\xb9\x1c\xd0\x54\x4d\xfa\xd7\x40\x61\x35\x7d\xe5\xd1\x0d\x50\x48\x86\x17\xfc\x65\x0c\x54\xd7\x68\xd1\x34\x4d\x71\xa8\x13\xe4\x4b\xd7\x08\xf1\x6d\xef\x08\xc1\xaa\xd9\x4d\x07\xff\xb7\x3b\x5d\xc6\x28\x10\x62\x95\xbd\x16\x9e\x31\x46\xeb\xe9\x45\x98\x15\xdb\x45\xc6\x1a\x79\xe3\xd3\xfd\x6a\x15\x40\x3e\x94\x10\xeb\xef\x89\xeb\xa2\x27\x9a\x89\x14\xf4\x5a\x8c\xa5\x03\xab\xc0\xdc\x31\x86\xbf\x20\xd7\xee\xa2\x0b\xc5\xdf\x60\x95\xb0\x73\x20\xe3\x75\xcd\x30\x0c\x20\x44\x78\x2a\xc9\x52\xf7\xad\x3c\x5d\xfb\x93\x95\x65\x79\x69\x86\x29\x68\x3c\x0d\xf8\xe4\x4d\xd2\x90\xa4\x84\x00\x14\x96\xcf\x71\x72\x7f\x05\x14\x78\x34\x4d\xfa\xa3\xc5\x6c\xbe\x7c\x9c\x53\x58\xc7\xd1\x6a\x32\x4c\x7a\xef\x99\xc3\xa3\xe9\x62\x16\xaf\xef\x26\xbb\x58\x15\x55\x73\x97\xed\x37\x61\x0b\xb2\x1c\x75\x03\x59\x40\x72\x02\xd7\x93\x1f\x03\x20\xb0\x4b\xa9\x16\x9e\x62\x25\x70\x9b\xe8\x33\x26\xf5\x72\xa7\x12\x38\xce\x66\x37\x25\x3c\xb4\x03\xa7\xbb\x6f\x3b\x01\xaa\x82\xaa\xdf\x76\x6d\x3f\xfc\x87\xa1\x52\x64\xab\x1f\x16\x51\xaf\xed\x55\x1b\x79\x23\xfb\x97\x0a\x99\xf7\x11\x00\x00\xff\xff\x54\x04\xaf\xad\x62\x02\x00\x00")

func assetsTplMarkdownTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplMarkdownTpl,
		"assets/tpl/markdown.tpl",
	)
}

func assetsTplMarkdownTpl() (*asset, error) {
	bytes, err := assetsTplMarkdownTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/markdown.tpl", size: 610, mode: os.FileMode(438), modTime: time.Unix(1582012295, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplTablesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\xe5\x4a\xce\xcf\x2b\x2e\x51\xd0\xe0\xe5\xaa\xae\x2e\x4a\xcc\x4b\x4f\x55\x50\xc9\xd4\x51\x50\xc9\x2c\x49\xcd\x55\xb0\xb2\x55\xd0\xab\xad\x05\xc9\x80\xf9\x7a\xa1\x05\x05\xa9\x45\x21\x89\x49\x39\xa9\x7e\x89\xb9\xa9\xb5\xb5\x0a\x0a\x0a\x0a\xb6\x0a\x4a\x30\x69\x24\x19\x25\x05\x7d\x7d\x05\x98\xb8\x73\x7e\x6e\x6e\x6a\x5e\x49\x6d\x6d\x75\x75\x6a\x5e\x0a\xc8\x40\x4d\x40\x00\x00\x00\xff\xff\xf6\x4d\x87\xcf\x77\x00\x00\x00")

func assetsTplTablesTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplTablesTpl,
		"assets/tpl/tables.tpl",
	)
}

func assetsTplTablesTpl() (*asset, error) {
	bytes, err := assetsTplTablesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/tables.tpl", size: 119, mode: os.FileMode(438), modTime: time.Unix(1590049353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplTest1Tpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x51\x6f\x13\xcb\x15\x7e\x8e\x25\xff\x87\xc9\x8a\x14\x6f\xb2\x31\x5e\xc7\x20\xea\xca\x45\x2d\x21\x28\x2d\x4d\x11\x09\x4f\x10\xa1\x89\x77\xec\x2c\x59\xef\xba\x33\xe3\x84\xc8\x58\x72\x69\x28\x69\x0b\x04\x5a\x4c\x29\x84\x06\x10\x54\x7d\x29\x09\x2a\x55\x4d\x02\xba\xff\x05\xec\x4d\xf2\xc4\x5f\xb8\x9a\xd9\x5d\x67\x1d\xaf\x9d\x31\x84\xab\xfb\x60\x24\xa4\xdd\xec\x7c\xdf\x99\x73\xce\x77\xce\x9c\x5d\xb9\x58\x1c\x06\x47\x74\x32\x85\x11\x02\xc9\x14\x88\x81\x52\x29\x1c\x62\x7f\xc4\xd0\xcc\x22\x70\xe4\xaa\x02\x8e\x60\x6b\x81\x3d\x8b\x8e\xe9\xc8\xd0\x08\x5b\x00\x00\x00\x6c\x91\x9e\x01\xe8\x77\x7c\x41\x74\x02\xe6\x10\x90\xce\x43\x8c\x4c\x3a\xae\x49\xde\x2a\x6f\xa5\x67\x23\x05\xa0\xa6\x35\xee\x54\xe0\x67\x43\x06\x41\xad\x94\x93\x16\xa6\x5f\x46\x67\x6a\x9e\x33\xc8\xd4\xc0\x30\xbb\xc9\xc3\xf4\x1c\xcc\x22\x90\xb3\x34\x64\x90\x70\x28\x1c\xd2\x73\x79\x0b\x53\x10\x09\x87\xfa\x24\x42\x71\xda\x32\xe7\x25\x76\x4d\x11\xa1\xba\x99\x75\xae\xf5\x1c\x92\xc2\x21\x99\xad\xcf\x14\xcc\x34\x98\x42\x84\x16\x8b\xd1\x49\x8a\x0b\x69\x3a\x05\x67\x0c\xc4\xf6\x5a\x2a\x9d\x45\xf4\x82\xb5\x40\x22\x94\x50\x30\xe8\x32\x44\xa7\x64\x50\x0c\x87\xfa\xb0\xb5\x40\x14\x80\x30\x66\xb1\x3c\x8b\x02\xf1\x11\x39\xea\x51\x48\x04\x19\x28\x4d\x81\x34\xd4\x71\xed\x69\xcb\x28\xe4\x4c\x12\x91\x87\x24\x90\xc1\x56\x0e\x48\x43\x7c\x4d\x10\x62\x48\x02\x0b\xb3\x08\x23\xa0\x21\xe3\x4a\xc6\x80\xd9\xd4\x29\x49\x01\x31\x39\x1c\xea\x63\x51\xc7\x18\xf4\xa7\x80\xa9\x1b\x7c\xbb\x7d\x94\xd0\xe8\x19\x8c\x2d\x9c\x89\x48\xf6\xda\xab\x9d\xf5\x17\xf5\x97\x6f\x76\xde\xbe\xfa\x54\xbe\x31\x30\x7f\x19\x5f\x36\x25\xee\x0d\x43\x97\x9c\xd4\x71\xd8\x79\xac\x9b\xf4\x57\xc4\x32\x23\xcc\x61\xfe\x34\x1c\x2a\x09\x46\xae\x5d\xe0\x84\xe3\xf6\x03\x85\x0d\x18\x7a\x4e\xa7\x40\x15\x0c\xdf\xce\xdd\xff\xd7\x57\x1e\xd6\xef\x54\x76\x9e\xdf\xb6\x2b\x1b\xf6\x9d\xd7\xdd\x87\x52\x38\x92\xa7\x31\x82\x14\x05\x46\x52\x37\x59\x0c\x7f\x12\x84\xe2\x06\x79\x65\xe5\xe7\x78\xdd\xb1\x82\x3f\x8f\xf5\x1c\xc4\x8b\xbf\x46\x8b\xac\x76\x9c\xe7\x1d\xfb\x82\xb3\xc4\x57\xc2\xa3\x33\xbf\xc5\x3a\x7f\xee\x11\x3b\xcb\xf6\xaf\x9b\x5a\xcc\x23\xc0\xea\x8f\x95\x9c\xbb\xa4\xaf\x58\x6c\xb4\x81\x52\x29\xd9\xe7\x56\x67\x74\xcc\xc2\x39\x48\xc7\x4d\x1a\x61\x75\x19\x9d\xb0\x16\x22\x72\xf4\xa2\xa9\x5f\x9b\x80\xa6\x15\x91\x15\x30\x72\x42\x56\x3c\xf0\x05\x94\x83\x78\xce\x67\x94\x85\xb7\x8d\x81\x7d\x74\x91\x4e\x2c\x4e\x6f\xd9\xa3\x6c\x75\x26\x63\x58\x90\x9e\x48\x48\x0d\x54\x93\xad\x58\x34\x16\xc8\x7e\x00\xdf\xa1\xb1\xe9\x66\x87\xbd\x75\xcf\x75\x48\x4c\x3c\x03\x53\xac\xdb\x06\xf3\xed\x65\xa8\x4b\xe2\xc1\x0e\xa4\x13\x68\x81\x3d\xf5\xa9\xa9\x33\x7b\x30\x8b\x64\xff\xef\x2f\x3b\xeb\x15\xa7\xbc\x3f\x95\x6f\x48\xed\x39\x9a\xb4\xe3\xde\xb0\xff\x07\xf6\x38\xb7\xb4\x75\x53\xa4\x65\xaf\xfc\xb5\x7e\xf3\x95\x50\x9f\x61\xb0\x73\x56\xb6\x01\xb2\x97\xef\xd5\xff\xbc\xf6\xa9\x7c\x83\x43\x84\x1b\xcf\x24\x9c\x0f\x6e\x3b\x82\x27\x1f\xc7\x4b\x1a\x32\x10\x45\xe2\x4d\x39\xcd\x63\x72\x45\x83\x14\xfd\xfc\x14\x80\xa6\x06\x34\x44\xd2\x58\xcf\x53\xdd\x32\xf9\x01\xc7\xf3\x3a\xca\x02\x17\x8f\xc5\x63\x0a\x38\xa1\x00\xf5\xb8\x02\xd4\x84\x02\xe2\x23\x0a\x48\x28\x20\xe6\x2e\x3a\x67\xa5\xa1\x21\x2b\xa0\x25\x97\x02\xf1\xae\x2f\x3f\xdb\xfd\xc7\xcb\x2e\xe3\xed\x80\x6a\x9b\x7f\x1c\xd0\x1a\x47\x83\x17\x77\x05\x74\x75\x80\x5e\xcc\x6b\x6d\xdb\x7e\x06\x14\xf2\x02\x09\x18\xd3\x31\xa1\x11\xf9\x67\x6c\x65\x7f\xaa\xc9\xcb\x31\x48\xa1\xc1\x04\xf2\xf7\x67\xf6\x7f\x2b\xce\x79\x56\xab\x96\xed\xa7\xcf\x1b\x9b\x6e\xf1\x98\x39\xcc\x09\x0a\xf9\xa8\xb3\x3b\x96\x04\x90\x02\x01\x05\xc7\x96\x09\xca\xc4\x75\xb4\x90\xe7\xa0\x80\xac\x34\x97\xc1\x93\xb7\xf6\xc3\x8d\xb6\x69\x69\xca\x8b\xbf\x10\x38\xec\xa0\xc4\xf4\x95\x44\xb3\xf3\x0b\xc3\xf8\x9a\xd2\x60\xf0\x1f\xc5\x98\x76\x0e\x12\xfa\x15\x43\x1a\x87\x8b\x38\xe2\x93\x99\xbd\x5a\xae\xdf\xbb\x5b\xab\x96\xfd\x89\xf8\x06\x63\x93\x55\x30\x83\x5d\x83\x39\xf6\x48\xc0\x3b\x87\x42\x38\x4f\x8e\x33\xbb\xb7\x56\xba\x6d\xd2\xe5\xad\xfa\xcd\x37\xf6\xea\x9f\x02\xb5\xe9\xec\x56\xd8\xed\x33\xd7\x74\x42\x83\x5f\x58\xe6\xa1\x51\xe0\x73\xa0\x94\x60\x6f\x41\xb3\x50\x44\xa9\x2e\x1f\xc7\x1e\x9a\x62\xf5\x0c\x98\x85\xa4\xa5\x79\xfe\xe7\x51\x7d\xf5\xdf\xb5\xea\xd6\xee\x83\xd7\xb5\xea\xe6\xc7\xf2\xea\x00\xf9\x58\x7e\xba\xfd\x78\x69\x7f\x4c\x1a\xbb\x09\x0e\x68\xad\x7a\xe7\x4b\xb8\x44\xc2\x3b\xa6\x9b\x5a\x60\x70\xf9\xe1\x95\x4c\x05\xcf\xe2\xde\x5b\x74\x12\x48\xaa\x54\x12\x6f\x13\xdc\x1a\x67\xfe\xd6\xcd\xc2\xb7\xa3\x03\x37\x24\x81\x48\x9e\x3b\x74\x45\xd7\x80\x4e\x80\x59\x30\x0c\x60\x61\xd0\xf8\x63\xea\xe8\x51\xd9\x3d\xb9\xf7\xbf\x97\x1e\xdc\xdf\x3b\x7b\xd1\xdc\xdf\x03\xfc\x10\xee\xe0\xa3\x7c\x2e\xe9\x3e\x97\xa3\xc8\x18\x33\x60\x36\x09\xd4\x2e\x12\xe9\x1a\x13\x4d\xe5\xd7\xcd\x1e\x4c\xec\xda\xc7\xf2\x53\xff\x61\xbe\xff\xa0\x13\x4b\xb7\xbb\x6d\xa9\x29\x8f\xaa\x50\x1e\xfd\x2e\x7c\x7e\xff\x7b\xd1\x73\xba\x2b\x27\xba\xcc\xf5\x2f\x17\xc7\x83\x6b\xb7\xab\x24\x72\x16\xc9\xb0\x20\x81\x26\xca\xce\x9b\x92\x22\x11\xa8\x65\x0c\x48\xd8\xe5\x4f\xe3\x23\x57\x4f\x8e\xcc\x69\xdf\x7e\xc2\x14\x08\x90\x17\x1b\xf6\x5e\x72\x6c\x10\xd4\xaa\x9b\xf6\xb3\xfb\xdb\x5b\x7f\xb3\xff\xb9\xb4\xfd\x60\xcd\x5e\xbe\x57\xab\x96\x6b\x9b\x4f\xea\xb7\x3e\xd8\x95\x0d\x30\x78\xcc\xf9\xba\xc6\xba\x73\x16\x35\xbe\xc1\xc5\xd9\x5f\x3b\xcf\x10\xc8\x0c\x0c\xab\xa1\x13\xaa\xb2\x90\x06\x82\x74\x42\xb9\x6b\xc1\x55\x36\xae\x25\x25\x08\x25\x05\x34\x5a\xa7\x24\x29\x60\xd2\xc2\x34\xa9\xc6\x4a\x4a\x67\xe0\xcc\x4c\x13\x90\xf3\x08\x42\xd3\xe9\x26\x28\x67\x12\x84\x6a\x5a\x13\x94\x33\x09\x43\xd5\x26\x2c\xa7\xe2\xd8\x84\x00\x36\xde\x06\x3b\x22\x80\x1d\x69\x83\x8d\x0b\x60\x13\x6d\xb0\xae\xbf\x25\xa7\x02\xb8\x0a\xa2\x4c\x23\x72\x7f\xea\x64\xc0\xb1\x55\xd9\xd8\xde\x5a\xda\x7e\xbc\xb4\x5b\xf9\xae\xbe\xf9\xaf\x5a\x75\xb3\xf6\xa1\x62\x3f\x5a\x1f\xd0\xea\xf7\x5f\x7c\x7e\xbf\xe6\x6a\xda\x47\x23\x3e\xdc\x22\x12\x3c\x09\xf5\x94\xd9\x53\xe6\x9e\x32\x09\x89\xa8\x4a\x4c\x6e\x95\x26\xd3\xe2\x56\xb9\xf6\x6e\xd9\x1b\x1f\xed\xf5\x07\xde\x65\x7d\x63\xa5\x55\x9f\x97\xd4\xe9\xe8\xb8\xe6\xdd\xc4\xd8\x8d\x1c\x68\x2f\xa1\x1c\x3f\xc8\x9e\xb6\x67\x4f\x6b\x6b\x2f\x31\x1d\x65\x8e\x79\xb7\xc7\x9d\x5b\xf1\x2f\x3c\x0b\x30\xdf\x2b\x90\x5e\x81\x04\x15\x88\xa3\x56\xae\x90\x98\xa2\xca\x3e\x09\x3b\xc2\xee\x4f\xb1\x10\x83\xeb\xd7\xfd\xd2\xef\x4f\xb1\x94\x05\x8c\x3a\xeb\xef\x76\x36\xfe\xe0\x4d\x83\xb7\x7d\x34\xa9\x01\xd2\x54\x3c\xa9\x01\xd2\xa4\xf0\x98\xbf\xa2\x54\x5f\x45\x1d\xac\xee\x29\xeb\x37\x3d\x79\xf7\xe4\x1d\x2c\xef\x1c\xcc\xab\xc9\x94\x23\x72\x47\x28\x4c\x57\x7b\x2f\x94\xec\xb9\x2b\x7a\x76\x79\x89\xb3\x4e\xf7\x3b\x88\x4b\x06\x32\x23\xfc\x4a\x1e\x56\xa7\x5b\xbf\xaa\x36\x66\x7a\x26\xe5\x81\xa1\xf9\xe1\xe0\x7f\xee\x53\x57\xef\x3e\x33\x9e\xde\x9b\xcc\x74\xa1\x7b\x36\xb8\xf7\x84\xdf\x13\x7e\x90\xf0\xb1\x65\xd1\x3d\xe1\x3b\x4a\xc1\x05\xa4\x00\xd7\x34\x67\x69\xae\x05\x06\x71\x6b\x81\x5d\x46\x4f\xcf\xea\x86\x86\x91\xc9\x9a\x73\xb7\xd7\xfc\x8c\x60\x26\x3a\x54\x4d\xe3\x08\x38\x04\x6b\xdd\xfc\x60\xa1\x6d\xd9\x88\x7e\xdc\x93\xbc\x00\x8b\xfd\xbe\x81\xdb\xe3\xdc\x0a\x70\x73\xc0\x44\x27\xc5\x45\xbe\x1e\x38\x9f\xd4\x9d\xf7\xf8\xc6\x6b\x7d\x17\xdf\xfd\x2c\xdf\x98\x58\x2c\xf2\x5f\xd4\x94\x4a\xdf\x07\x00\x00\xff\xff\x75\x47\x8b\x62\x3e\x24\x00\x00")

func assetsTplTest1TplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplTest1Tpl,
		"assets/tpl/test1.tpl",
	)
}

func assetsTplTest1Tpl() (*asset, error) {
	bytes, err := assetsTplTest1TplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/test1.tpl", size: 9278, mode: os.FileMode(438), modTime: time.Unix(1592386519, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/tpl/curd.tpl":     assetsTplCurdTpl,
	"assets/tpl/curd2.tpl":    assetsTplCurd2Tpl,
	"assets/tpl/entity.tpl":   assetsTplEntityTpl,
	"assets/tpl/example.tpl":  assetsTplExampleTpl,
	"assets/tpl/init.tpl":     assetsTplInitTpl,
	"assets/tpl/markdown.tpl": assetsTplMarkdownTpl,
	"assets/tpl/tables.tpl":   assetsTplTablesTpl,
	"assets/tpl/test1.tpl":    assetsTplTest1Tpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"tpl": &bintree{nil, map[string]*bintree{
			"curd.tpl":     &bintree{assetsTplCurdTpl, map[string]*bintree{}},
			"curd2.tpl":    &bintree{assetsTplCurd2Tpl, map[string]*bintree{}},
			"entity.tpl":   &bintree{assetsTplEntityTpl, map[string]*bintree{}},
			"example.tpl":  &bintree{assetsTplExampleTpl, map[string]*bintree{}},
			"init.tpl":     &bintree{assetsTplInitTpl, map[string]*bintree{}},
			"markdown.tpl": &bintree{assetsTplMarkdownTpl, map[string]*bintree{}},
			"tables.tpl":   &bintree{assetsTplTablesTpl, map[string]*bintree{}},
			"test1.tpl":    &bintree{assetsTplTest1Tpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
